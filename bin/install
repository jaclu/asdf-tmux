#!/usr/bin/env bash

construct_configure_options() {
    load_configure_options

    # shellcheck disable=SC2154
    if [[ "$TMUX_CONFIGURE_OPTIONS" = "" ]]; then
        local configure_options="--prefix=$install_path"

        if [[ "$TMUX_EXTRA_CONFIGURE_OPTIONS" != "" ]]; then
            configure_options="$configure_options $TMUX_EXTRA_CONFIGURE_OPTIONS"
        fi
    else
        local configure_options="$TMUX_CONFIGURE_OPTIONS --prefix=$install_path"
    fi

    echo "$configure_options"
}

load_configure_options() {
    local asdf_tmux_configure_options="${HOME}/.asdf-tmux-configure-options"

    if [[ ! -r "$asdf_tmux_configure_options" ]]; then
        return
    fi

    set -a
    # shellcheck source=/dev/null
    source "$asdf_tmux_configure_options"
    set +a
}

clear_tmux_work_folder() {
    # clearing out work directory
    [[ -z "$tmp_download_dir" ]] && {
        echo "ERRORL clear_tmux_work_folder() undefined: tmp_download_dir"
        exit 1
    }
    [[ -z "$version" ]]  && {
        echo "ERROR: clear_tmux_work_folder() undefined: version"
        exit 1
    }
    _d="$tmp_download_dir/tmux-${version}"
    [[ -d "$_d" ]] && {
        rm -rf  || {
            echo "ERROR: clear_tmux_work_folder() failed to remove: $_d"
            exit 1
        }
    }
}

install_tmux() {
    local version=$1
    local install_path=$2
    local concurrency=${3:-1}
    local tmp_download_dir
    local source_path

    if [[ "$TMPDIR" = "" ]]; then
        tmp_download_dir=$(mktemp -d -t tmux_build_XXXXXX)
    else
        tmp_download_dir=$TMPDIR
    fi

    # path to the tar file
    source_path=$(get_download_file_path "$version" "$tmp_download_dir")
    echo "$source_path"
    download_source_file "$version" "$source_path"

    echo "><> download completed"
    # running this in subshell
    # we don't want to disturb current working dir
    (
        if ! type "unzip" &>/dev/null; then
            echo "ERROR: unzip not found"
            exit 1
        fi

        clear_tmux_work_folder
        unzip -q "$source_path" -d "$tmp_download_dir" || exit 1
        echo "><> unzip done"

        cd "$tmp_download_dir/tmux-${version}" || exit

        scr_autogen="./autogen.sh"
        if [[ -f "$scr_autogen" ]]; then
            "$scr_autogen"
        else
            echo
            echo "><> No $scr_autogen found, skipping"
            echo
        fi

        # install_path=$install_path
        ./configure "$(construct_configure_options)" CFLAGS="-I${install_path}/include" LDFLAGS="-L${install_path}/lib -Wl,-rpath,$install_path/lib"
        make -j "$concurrency" && make install
    )
    clear_tmux_work_folder
}

install_libevent() {
    local install_path=$1
    local concurrency=${2:-1}
    local tmp_download_dir

    if [[ "$TMPDIR" = "" ]]; then
        tmp_download_dir=$(mktemp -d -t tmux_build_XXXXXX)
    else
        tmp_download_dir=$TMPDIR
    fi
    cd "$tmp_download_dir" || echo "ERROR: Failed to cd $tmp_download_dir"

    libevent_version="2.1.10"

    curl -LO "https://github.com/libevent/libevent/releases/download/release-${libevent_version}-stable/libevent-${libevent_version}-stable.tar.gz"
    tar -zxf libevent-"${libevent_version}"-stable.tar.gz
    cd libevent-"${libevent_version}"-stable || exit
    ./configure --prefix="$install_path"

    if make -j "$concurrency"; then
        make install
    else
        exit 2
    fi
}

download_source_file() {
    local version=$1
    local download_path=$2
    local download_url

    download_url=$(get_download_url "$version")
    echo "><> will download: $download_url"
    curl -Lo "$download_path" -C - "$download_url"
}

get_download_file_path() {
    local version=$1
    local tmp_download_dir=$2

    echo "$tmp_download_dir/tmux-${version}.zip"
}

get_download_url() {
    local version=$1

    echo "https://github.com/tmux/tmux/archive/${version}.zip"
}

if [[ ! -f /usr/include/event.h ]]; then
    # shellcheck disable=SC2154
    install_libevent "$ASDF_INSTALL_PATH" "$ASDF_CONCURRENCY"
else
    echo
    echo "><> libevent-dev package is installed, no need to install separately"
    echo
fi


#echo "ASDF_INSTALL_VERSION [$ASDF_INSTALL_VERSION]"
#echo "ASDF_INSTALL_PATH [$ASDF_INSTALL_PATH]"
#echo "ASDF_CONCURRENCY [$ASDF_CONCURRENCY]"
#exit 1

# shellcheck disable=SC2154
install_tmux "$ASDF_INSTALL_VERSION" "$ASDF_INSTALL_PATH" "$ASDF_CONCURRENCY"
